/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.oagi.score.repo.api.impl.jooq.entity.tables.DtManifest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DtManifestRecord extends UpdatableRecordImpl<DtManifestRecord> implements Record9<String, String, String, String, Byte, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.dt_manifest.dt_manifest_id</code>. Primary,
     * internal database key.
     */
    public void setDtManifestId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.dt_manifest_id</code>. Primary,
     * internal database key.
     */
    public String getDtManifestId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oagi.dt_manifest.release_id</code>.
     */
    public void setReleaseId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.release_id</code>.
     */
    public String getReleaseId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.dt_manifest.dt_id</code>.
     */
    public void setDtId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.dt_id</code>.
     */
    public String getDtId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.dt_manifest.based_dt_manifest_id</code>.
     */
    public void setBasedDtManifestId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.based_dt_manifest_id</code>.
     */
    public String getBasedDtManifestId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.dt_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public void setConflict(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public Byte getConflict() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>oagi.dt_manifest.log_id</code>. A foreign key pointed to
     * a log for the current record.
     */
    public void setLogId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.log_id</code>. A foreign key pointed to
     * a log for the current record.
     */
    public String getLogId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.dt_manifest.replacement_dt_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public void setReplacementDtManifestId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.replacement_dt_manifest_id</code>. This
     * refers to a replacement manifest if the record is deprecated.
     */
    public String getReplacementDtManifestId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>oagi.dt_manifest.prev_dt_manifest_id</code>.
     */
    public void setPrevDtManifestId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.prev_dt_manifest_id</code>.
     */
    public String getPrevDtManifestId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>oagi.dt_manifest.next_dt_manifest_id</code>.
     */
    public void setNextDtManifestId(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.dt_manifest.next_dt_manifest_id</code>.
     */
    public String getNextDtManifestId() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, String, Byte, String, String, String, String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, String, Byte, String, String, String, String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DtManifest.DT_MANIFEST.DT_MANIFEST_ID;
    }

    @Override
    public Field<String> field2() {
        return DtManifest.DT_MANIFEST.RELEASE_ID;
    }

    @Override
    public Field<String> field3() {
        return DtManifest.DT_MANIFEST.DT_ID;
    }

    @Override
    public Field<String> field4() {
        return DtManifest.DT_MANIFEST.BASED_DT_MANIFEST_ID;
    }

    @Override
    public Field<Byte> field5() {
        return DtManifest.DT_MANIFEST.CONFLICT;
    }

    @Override
    public Field<String> field6() {
        return DtManifest.DT_MANIFEST.LOG_ID;
    }

    @Override
    public Field<String> field7() {
        return DtManifest.DT_MANIFEST.REPLACEMENT_DT_MANIFEST_ID;
    }

    @Override
    public Field<String> field8() {
        return DtManifest.DT_MANIFEST.PREV_DT_MANIFEST_ID;
    }

    @Override
    public Field<String> field9() {
        return DtManifest.DT_MANIFEST.NEXT_DT_MANIFEST_ID;
    }

    @Override
    public String component1() {
        return getDtManifestId();
    }

    @Override
    public String component2() {
        return getReleaseId();
    }

    @Override
    public String component3() {
        return getDtId();
    }

    @Override
    public String component4() {
        return getBasedDtManifestId();
    }

    @Override
    public Byte component5() {
        return getConflict();
    }

    @Override
    public String component6() {
        return getLogId();
    }

    @Override
    public String component7() {
        return getReplacementDtManifestId();
    }

    @Override
    public String component8() {
        return getPrevDtManifestId();
    }

    @Override
    public String component9() {
        return getNextDtManifestId();
    }

    @Override
    public String value1() {
        return getDtManifestId();
    }

    @Override
    public String value2() {
        return getReleaseId();
    }

    @Override
    public String value3() {
        return getDtId();
    }

    @Override
    public String value4() {
        return getBasedDtManifestId();
    }

    @Override
    public Byte value5() {
        return getConflict();
    }

    @Override
    public String value6() {
        return getLogId();
    }

    @Override
    public String value7() {
        return getReplacementDtManifestId();
    }

    @Override
    public String value8() {
        return getPrevDtManifestId();
    }

    @Override
    public String value9() {
        return getNextDtManifestId();
    }

    @Override
    public DtManifestRecord value1(String value) {
        setDtManifestId(value);
        return this;
    }

    @Override
    public DtManifestRecord value2(String value) {
        setReleaseId(value);
        return this;
    }

    @Override
    public DtManifestRecord value3(String value) {
        setDtId(value);
        return this;
    }

    @Override
    public DtManifestRecord value4(String value) {
        setBasedDtManifestId(value);
        return this;
    }

    @Override
    public DtManifestRecord value5(Byte value) {
        setConflict(value);
        return this;
    }

    @Override
    public DtManifestRecord value6(String value) {
        setLogId(value);
        return this;
    }

    @Override
    public DtManifestRecord value7(String value) {
        setReplacementDtManifestId(value);
        return this;
    }

    @Override
    public DtManifestRecord value8(String value) {
        setPrevDtManifestId(value);
        return this;
    }

    @Override
    public DtManifestRecord value9(String value) {
        setNextDtManifestId(value);
        return this;
    }

    @Override
    public DtManifestRecord values(String value1, String value2, String value3, String value4, Byte value5, String value6, String value7, String value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DtManifestRecord
     */
    public DtManifestRecord() {
        super(DtManifest.DT_MANIFEST);
    }

    /**
     * Create a detached, initialised DtManifestRecord
     */
    public DtManifestRecord(String dtManifestId, String releaseId, String dtId, String basedDtManifestId, Byte conflict, String logId, String replacementDtManifestId, String prevDtManifestId, String nextDtManifestId) {
        super(DtManifest.DT_MANIFEST);

        setDtManifestId(dtManifestId);
        setReleaseId(releaseId);
        setDtId(dtId);
        setBasedDtManifestId(basedDtManifestId);
        setConflict(conflict);
        setLogId(logId);
        setReplacementDtManifestId(replacementDtManifestId);
        setPrevDtManifestId(prevDtManifestId);
        setNextDtManifestId(nextDtManifestId);
    }
}
