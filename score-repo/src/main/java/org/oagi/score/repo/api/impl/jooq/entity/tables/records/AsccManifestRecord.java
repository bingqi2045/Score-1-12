/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.oagi.score.repo.api.impl.jooq.entity.tables.AsccManifest;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AsccManifestRecord extends UpdatableRecordImpl<AsccManifestRecord> implements Record10<String, String, String, String, String, String, Byte, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.ascc_manifest.ascc_manifest_id</code>. Primary,
     * internal database key.
     */
    public void setAsccManifestId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.ascc_manifest_id</code>. Primary,
     * internal database key.
     */
    public String getAsccManifestId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.release_id</code>. Foreign key to the
     * RELEASE table.
     */
    public void setReleaseId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.release_id</code>. Foreign key to the
     * RELEASE table.
     */
    public String getReleaseId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.ascc_id</code>.
     */
    public void setAsccId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.ascc_id</code>.
     */
    public String getAsccId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.seq_key_id</code>.
     */
    public void setSeqKeyId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.seq_key_id</code>.
     */
    public String getSeqKeyId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.from_acc_manifest_id</code>.
     */
    public void setFromAccManifestId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.from_acc_manifest_id</code>.
     */
    public String getFromAccManifestId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.to_asccp_manifest_id</code>.
     */
    public void setToAsccpManifestId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.to_asccp_manifest_id</code>.
     */
    public String getToAsccpManifestId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public void setConflict(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.conflict</code>. This indicates that
     * there is a conflict between self and relationship.
     */
    public Byte getConflict() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.replacement_ascc_manifest_id</code>.
     * This refers to a replacement manifest if the record is deprecated.
     */
    public void setReplacementAsccManifestId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.replacement_ascc_manifest_id</code>.
     * This refers to a replacement manifest if the record is deprecated.
     */
    public String getReplacementAsccManifestId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.prev_ascc_manifest_id</code>.
     */
    public void setPrevAsccManifestId(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.prev_ascc_manifest_id</code>.
     */
    public String getPrevAsccManifestId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>oagi.ascc_manifest.next_ascc_manifest_id</code>.
     */
    public void setNextAsccManifestId(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.ascc_manifest.next_ascc_manifest_id</code>.
     */
    public String getNextAsccManifestId() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<String, String, String, String, String, String, Byte, String, String, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<String, String, String, String, String, String, Byte, String, String, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return AsccManifest.ASCC_MANIFEST.ASCC_MANIFEST_ID;
    }

    @Override
    public Field<String> field2() {
        return AsccManifest.ASCC_MANIFEST.RELEASE_ID;
    }

    @Override
    public Field<String> field3() {
        return AsccManifest.ASCC_MANIFEST.ASCC_ID;
    }

    @Override
    public Field<String> field4() {
        return AsccManifest.ASCC_MANIFEST.SEQ_KEY_ID;
    }

    @Override
    public Field<String> field5() {
        return AsccManifest.ASCC_MANIFEST.FROM_ACC_MANIFEST_ID;
    }

    @Override
    public Field<String> field6() {
        return AsccManifest.ASCC_MANIFEST.TO_ASCCP_MANIFEST_ID;
    }

    @Override
    public Field<Byte> field7() {
        return AsccManifest.ASCC_MANIFEST.CONFLICT;
    }

    @Override
    public Field<String> field8() {
        return AsccManifest.ASCC_MANIFEST.REPLACEMENT_ASCC_MANIFEST_ID;
    }

    @Override
    public Field<String> field9() {
        return AsccManifest.ASCC_MANIFEST.PREV_ASCC_MANIFEST_ID;
    }

    @Override
    public Field<String> field10() {
        return AsccManifest.ASCC_MANIFEST.NEXT_ASCC_MANIFEST_ID;
    }

    @Override
    public String component1() {
        return getAsccManifestId();
    }

    @Override
    public String component2() {
        return getReleaseId();
    }

    @Override
    public String component3() {
        return getAsccId();
    }

    @Override
    public String component4() {
        return getSeqKeyId();
    }

    @Override
    public String component5() {
        return getFromAccManifestId();
    }

    @Override
    public String component6() {
        return getToAsccpManifestId();
    }

    @Override
    public Byte component7() {
        return getConflict();
    }

    @Override
    public String component8() {
        return getReplacementAsccManifestId();
    }

    @Override
    public String component9() {
        return getPrevAsccManifestId();
    }

    @Override
    public String component10() {
        return getNextAsccManifestId();
    }

    @Override
    public String value1() {
        return getAsccManifestId();
    }

    @Override
    public String value2() {
        return getReleaseId();
    }

    @Override
    public String value3() {
        return getAsccId();
    }

    @Override
    public String value4() {
        return getSeqKeyId();
    }

    @Override
    public String value5() {
        return getFromAccManifestId();
    }

    @Override
    public String value6() {
        return getToAsccpManifestId();
    }

    @Override
    public Byte value7() {
        return getConflict();
    }

    @Override
    public String value8() {
        return getReplacementAsccManifestId();
    }

    @Override
    public String value9() {
        return getPrevAsccManifestId();
    }

    @Override
    public String value10() {
        return getNextAsccManifestId();
    }

    @Override
    public AsccManifestRecord value1(String value) {
        setAsccManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value2(String value) {
        setReleaseId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value3(String value) {
        setAsccId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value4(String value) {
        setSeqKeyId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value5(String value) {
        setFromAccManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value6(String value) {
        setToAsccpManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value7(Byte value) {
        setConflict(value);
        return this;
    }

    @Override
    public AsccManifestRecord value8(String value) {
        setReplacementAsccManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value9(String value) {
        setPrevAsccManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord value10(String value) {
        setNextAsccManifestId(value);
        return this;
    }

    @Override
    public AsccManifestRecord values(String value1, String value2, String value3, String value4, String value5, String value6, Byte value7, String value8, String value9, String value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AsccManifestRecord
     */
    public AsccManifestRecord() {
        super(AsccManifest.ASCC_MANIFEST);
    }

    /**
     * Create a detached, initialised AsccManifestRecord
     */
    public AsccManifestRecord(String asccManifestId, String releaseId, String asccId, String seqKeyId, String fromAccManifestId, String toAsccpManifestId, Byte conflict, String replacementAsccManifestId, String prevAsccManifestId, String nextAsccManifestId) {
        super(AsccManifest.ASCC_MANIFEST);

        setAsccManifestId(asccManifestId);
        setReleaseId(releaseId);
        setAsccId(asccId);
        setSeqKeyId(seqKeyId);
        setFromAccManifestId(fromAccManifestId);
        setToAsccpManifestId(toAsccpManifestId);
        setConflict(conflict);
        setReplacementAsccManifestId(replacementAsccManifestId);
        setPrevAsccManifestId(prevAsccManifestId);
        setNextAsccManifestId(nextAsccManifestId);
    }
}
