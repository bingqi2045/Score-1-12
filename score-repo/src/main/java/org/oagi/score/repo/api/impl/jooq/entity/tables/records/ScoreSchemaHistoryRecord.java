/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.oagi.score.repo.api.impl.jooq.entity.tables.ScoreSchemaHistory;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScoreSchemaHistoryRecord extends UpdatableRecordImpl<ScoreSchemaHistoryRecord> implements Record5<String, UInteger, LocalDateTime, Short, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.score_schema_history.history_id</code>. An
     * internal, primary database key.
     */
    public void setHistoryId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.score_schema_history.history_id</code>. An
     * internal, primary database key.
     */
    public String getHistoryId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oagi.score_schema_history.order</code>.
     */
    public void setOrder(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.score_schema_history.order</code>.
     */
    public UInteger getOrder() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>oagi.score_schema_history.executed_on</code>.
     */
    public void setExecutedOn(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.score_schema_history.executed_on</code>.
     */
    public LocalDateTime getExecutedOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>oagi.score_schema_history.result</code>.
     */
    public void setResult(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.score_schema_history.result</code>.
     */
    public Short getResult() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>oagi.score_schema_history.message</code>.
     */
    public void setMessage(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.score_schema_history.message</code>.
     */
    public String getMessage() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, UInteger, LocalDateTime, Short, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, UInteger, LocalDateTime, Short, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ScoreSchemaHistory.SCORE_SCHEMA_HISTORY.HISTORY_ID;
    }

    @Override
    public Field<UInteger> field2() {
        return ScoreSchemaHistory.SCORE_SCHEMA_HISTORY.ORDER;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return ScoreSchemaHistory.SCORE_SCHEMA_HISTORY.EXECUTED_ON;
    }

    @Override
    public Field<Short> field4() {
        return ScoreSchemaHistory.SCORE_SCHEMA_HISTORY.RESULT;
    }

    @Override
    public Field<String> field5() {
        return ScoreSchemaHistory.SCORE_SCHEMA_HISTORY.MESSAGE;
    }

    @Override
    public String component1() {
        return getHistoryId();
    }

    @Override
    public UInteger component2() {
        return getOrder();
    }

    @Override
    public LocalDateTime component3() {
        return getExecutedOn();
    }

    @Override
    public Short component4() {
        return getResult();
    }

    @Override
    public String component5() {
        return getMessage();
    }

    @Override
    public String value1() {
        return getHistoryId();
    }

    @Override
    public UInteger value2() {
        return getOrder();
    }

    @Override
    public LocalDateTime value3() {
        return getExecutedOn();
    }

    @Override
    public Short value4() {
        return getResult();
    }

    @Override
    public String value5() {
        return getMessage();
    }

    @Override
    public ScoreSchemaHistoryRecord value1(String value) {
        setHistoryId(value);
        return this;
    }

    @Override
    public ScoreSchemaHistoryRecord value2(UInteger value) {
        setOrder(value);
        return this;
    }

    @Override
    public ScoreSchemaHistoryRecord value3(LocalDateTime value) {
        setExecutedOn(value);
        return this;
    }

    @Override
    public ScoreSchemaHistoryRecord value4(Short value) {
        setResult(value);
        return this;
    }

    @Override
    public ScoreSchemaHistoryRecord value5(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public ScoreSchemaHistoryRecord values(String value1, UInteger value2, LocalDateTime value3, Short value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScoreSchemaHistoryRecord
     */
    public ScoreSchemaHistoryRecord() {
        super(ScoreSchemaHistory.SCORE_SCHEMA_HISTORY);
    }

    /**
     * Create a detached, initialised ScoreSchemaHistoryRecord
     */
    public ScoreSchemaHistoryRecord(String historyId, UInteger order, LocalDateTime executedOn, Short result, String message) {
        super(ScoreSchemaHistory.SCORE_SCHEMA_HISTORY);

        setHistoryId(historyId);
        setOrder(order);
        setExecutedOn(executedOn);
        setResult(result);
        setMessage(message);
    }
}
