/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.oagi.score.repo.api.impl.jooq.entity.tables.Comment;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record9<String, String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.comment.comment_id</code>. Primary, internal
     * database key.
     */
    public void setCommentId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.comment.comment_id</code>. Primary, internal
     * database key.
     */
    public String getCommentId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oagi.comment.reference</code>.
     */
    public void setReference(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.comment.reference</code>.
     */
    public String getReference() {
        return (String) get(1);
    }

    /**
     * Setter for <code>oagi.comment.comment</code>.
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.comment.comment</code>.
     */
    public String getComment() {
        return (String) get(2);
    }

    /**
     * Setter for <code>oagi.comment.is_hidden</code>.
     */
    public void setIsHidden(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.comment.is_hidden</code>.
     */
    public Byte getIsHidden() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>oagi.comment.is_deleted</code>.
     */
    public void setIsDeleted(Byte value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.comment.is_deleted</code>.
     */
    public Byte getIsDeleted() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>oagi.comment.prev_comment_id</code>.
     */
    public void setPrevCommentId(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.comment.prev_comment_id</code>.
     */
    public String getPrevCommentId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>oagi.comment.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.comment.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(6);
    }

    /**
     * Setter for <code>oagi.comment.creation_timestamp</code>.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.comment.creation_timestamp</code>.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>oagi.comment.last_update_timestamp</code>.
     */
    public void setLastUpdateTimestamp(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.comment.last_update_timestamp</code>.
     */
    public LocalDateTime getLastUpdateTimestamp() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<String, String, String, Byte, Byte, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Comment.COMMENT.COMMENT_ID;
    }

    @Override
    public Field<String> field2() {
        return Comment.COMMENT.REFERENCE;
    }

    @Override
    public Field<String> field3() {
        return Comment.COMMENT.COMMENT_;
    }

    @Override
    public Field<Byte> field4() {
        return Comment.COMMENT.IS_HIDDEN;
    }

    @Override
    public Field<Byte> field5() {
        return Comment.COMMENT.IS_DELETED;
    }

    @Override
    public Field<String> field6() {
        return Comment.COMMENT.PREV_COMMENT_ID;
    }

    @Override
    public Field<String> field7() {
        return Comment.COMMENT.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return Comment.COMMENT.CREATION_TIMESTAMP;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return Comment.COMMENT.LAST_UPDATE_TIMESTAMP;
    }

    @Override
    public String component1() {
        return getCommentId();
    }

    @Override
    public String component2() {
        return getReference();
    }

    @Override
    public String component3() {
        return getComment();
    }

    @Override
    public Byte component4() {
        return getIsHidden();
    }

    @Override
    public Byte component5() {
        return getIsDeleted();
    }

    @Override
    public String component6() {
        return getPrevCommentId();
    }

    @Override
    public String component7() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component8() {
        return getCreationTimestamp();
    }

    @Override
    public LocalDateTime component9() {
        return getLastUpdateTimestamp();
    }

    @Override
    public String value1() {
        return getCommentId();
    }

    @Override
    public String value2() {
        return getReference();
    }

    @Override
    public String value3() {
        return getComment();
    }

    @Override
    public Byte value4() {
        return getIsHidden();
    }

    @Override
    public Byte value5() {
        return getIsDeleted();
    }

    @Override
    public String value6() {
        return getPrevCommentId();
    }

    @Override
    public String value7() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value8() {
        return getCreationTimestamp();
    }

    @Override
    public LocalDateTime value9() {
        return getLastUpdateTimestamp();
    }

    @Override
    public CommentRecord value1(String value) {
        setCommentId(value);
        return this;
    }

    @Override
    public CommentRecord value2(String value) {
        setReference(value);
        return this;
    }

    @Override
    public CommentRecord value3(String value) {
        setComment(value);
        return this;
    }

    @Override
    public CommentRecord value4(Byte value) {
        setIsHidden(value);
        return this;
    }

    @Override
    public CommentRecord value5(Byte value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public CommentRecord value6(String value) {
        setPrevCommentId(value);
        return this;
    }

    @Override
    public CommentRecord value7(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public CommentRecord value8(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public CommentRecord value9(LocalDateTime value) {
        setLastUpdateTimestamp(value);
        return this;
    }

    @Override
    public CommentRecord values(String value1, String value2, String value3, Byte value4, Byte value5, String value6, String value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(String commentId, String reference, String comment, Byte isHidden, Byte isDeleted, String prevCommentId, String createdBy, LocalDateTime creationTimestamp, LocalDateTime lastUpdateTimestamp) {
        super(Comment.COMMENT);

        setCommentId(commentId);
        setReference(reference);
        setComment(comment);
        setIsHidden(isHidden);
        setIsDeleted(isDeleted);
        setPrevCommentId(prevCommentId);
        setCreatedBy(createdBy);
        setCreationTimestamp(creationTimestamp);
        setLastUpdateTimestamp(lastUpdateTimestamp);
    }
}
