/*
 * This file is generated by jOOQ.
 */
package org.oagi.score.repo.api.impl.jooq.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.oagi.score.repo.api.impl.jooq.entity.tables.CcTag;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CcTagRecord extends UpdatableRecordImpl<CcTagRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>oagi.cc_tag.cc_tag_id</code>. Primary, internal database
     * key.
     */
    public void setCcTagId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.cc_tag.cc_tag_id</code>. Primary, internal database
     * key.
     */
    public String getCcTagId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>oagi.cc_tag.tag_name</code>.
     */
    public void setTagName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.cc_tag.tag_name</code>.
     */
    public String getTagName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return CcTag.CC_TAG.CC_TAG_ID;
    }

    @Override
    public Field<String> field2() {
        return CcTag.CC_TAG.TAG_NAME;
    }

    @Override
    public String component1() {
        return getCcTagId();
    }

    @Override
    public String component2() {
        return getTagName();
    }

    @Override
    public String value1() {
        return getCcTagId();
    }

    @Override
    public String value2() {
        return getTagName();
    }

    @Override
    public CcTagRecord value1(String value) {
        setCcTagId(value);
        return this;
    }

    @Override
    public CcTagRecord value2(String value) {
        setTagName(value);
        return this;
    }

    @Override
    public CcTagRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CcTagRecord
     */
    public CcTagRecord() {
        super(CcTag.CC_TAG);
    }

    /**
     * Create a detached, initialised CcTagRecord
     */
    public CcTagRecord(String ccTagId, String tagName) {
        super(CcTag.CC_TAG);

        setCcTagId(ccTagId);
        setTagName(tagName);
    }
}
