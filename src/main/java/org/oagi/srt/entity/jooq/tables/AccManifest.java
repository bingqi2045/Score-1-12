/*
 * This file is generated by jOOQ.
 */
package org.oagi.srt.entity.jooq.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.oagi.srt.entity.jooq.Keys;
import org.oagi.srt.entity.jooq.Oagi;
import org.oagi.srt.entity.jooq.tables.records.AccManifestRecord;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AccManifest extends TableImpl<AccManifestRecord> {

    private static final long serialVersionUID = 701920274;

    /**
     * The reference instance of <code>oagi.acc_manifest</code>
     */
    public static final AccManifest ACC_MANIFEST = new AccManifest();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AccManifestRecord> getRecordType() {
        return AccManifestRecord.class;
    }

    /**
     * The column <code>oagi.acc_manifest.acc_manifest_id</code>.
     */
    public final TableField<AccManifestRecord, ULong> ACC_MANIFEST_ID = createField(DSL.name("acc_manifest_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>oagi.acc_manifest.release_id</code>.
     */
    public final TableField<AccManifestRecord, ULong> RELEASE_ID = createField(DSL.name("release_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.acc_manifest.module_id</code>.
     */
    public final TableField<AccManifestRecord, ULong> MODULE_ID = createField(DSL.name("module_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>oagi.acc_manifest.acc_id</code>.
     */
    public final TableField<AccManifestRecord, ULong> ACC_ID = createField(DSL.name("acc_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>oagi.acc_manifest.based_acc_manifest_id</code>.
     */
    public final TableField<AccManifestRecord, ULong> BASED_ACC_MANIFEST_ID = createField(DSL.name("based_acc_manifest_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * Create a <code>oagi.acc_manifest</code> table reference
     */
    public AccManifest() {
        this(DSL.name("acc_manifest"), null);
    }

    /**
     * Create an aliased <code>oagi.acc_manifest</code> table reference
     */
    public AccManifest(String alias) {
        this(DSL.name(alias), ACC_MANIFEST);
    }

    /**
     * Create an aliased <code>oagi.acc_manifest</code> table reference
     */
    public AccManifest(Name alias) {
        this(alias, ACC_MANIFEST);
    }

    private AccManifest(Name alias, Table<AccManifestRecord> aliased) {
        this(alias, aliased, null);
    }

    private AccManifest(Name alias, Table<AccManifestRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AccManifest(Table<O> child, ForeignKey<O, AccManifestRecord> key) {
        super(child, key, ACC_MANIFEST);
    }

    @Override
    public Schema getSchema() {
        return Oagi.OAGI;
    }

    @Override
    public Identity<AccManifestRecord, ULong> getIdentity() {
        return Keys.IDENTITY_ACC_MANIFEST;
    }

    @Override
    public UniqueKey<AccManifestRecord> getPrimaryKey() {
        return Keys.KEY_ACC_MANIFEST_PRIMARY;
    }

    @Override
    public List<UniqueKey<AccManifestRecord>> getKeys() {
        return Arrays.<UniqueKey<AccManifestRecord>>asList(Keys.KEY_ACC_MANIFEST_PRIMARY);
    }

    @Override
    public List<ForeignKey<AccManifestRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AccManifestRecord, ?>>asList(Keys.ACC_MANIFEST_RELEASE_ID_FK, Keys.ACC_MANIFEST_MODULE_ID_FK, Keys.ACC_MANIFEST_ACC_ID_FK, Keys.ACC_MANIFEST_BASED_ACC_MANIFEST_ID_FK);
    }

    public Release release() {
        return new Release(this, Keys.ACC_MANIFEST_RELEASE_ID_FK);
    }

    public Module module() {
        return new Module(this, Keys.ACC_MANIFEST_MODULE_ID_FK);
    }

    public Acc acc() {
        return new Acc(this, Keys.ACC_MANIFEST_ACC_ID_FK);
    }

    public AccManifest accManifest() {
        return new AccManifest(this, Keys.ACC_MANIFEST_BASED_ACC_MANIFEST_ID_FK);
    }

    @Override
    public AccManifest as(String alias) {
        return new AccManifest(DSL.name(alias), this);
    }

    @Override
    public AccManifest as(Name alias) {
        return new AccManifest(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AccManifest rename(String name) {
        return new AccManifest(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AccManifest rename(Name name) {
        return new AccManifest(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<ULong, ULong, ULong, ULong, ULong> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
