/*
 * This file is generated by jOOQ.
 */
package org.oagi.srt.entity.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;
import org.oagi.srt.entity.jooq.tables.Revision;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RevisionRecord extends UpdatableRecordImpl<RevisionRecord> implements Record10<ULong, UInteger, UInteger, String, String, JSON, ULong, ULong, ULong, LocalDateTime> {

    private static final long serialVersionUID = 1868708549;

    /**
     * Setter for <code>oagi.revision.revision_id</code>.
     */
    public void setRevisionId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>oagi.revision.revision_id</code>.
     */
    public ULong getRevisionId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>oagi.revision.revision_num</code>. This is an incremental integer. It tracks changes in each component. If a change is made to a component after it has been published, the component receives a new revision number. Revision number can be 1, 2, and so on.
     */
    public void setRevisionNum(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>oagi.revision.revision_num</code>. This is an incremental integer. It tracks changes in each component. If a change is made to a component after it has been published, the component receives a new revision number. Revision number can be 1, 2, and so on.
     */
    public UInteger getRevisionNum() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>oagi.revision.revision_tracking_num</code>. This supports the ability to undo changes during a revision (life cycle of a revision is from the component's WIP state to PUBLISHED state). REVISION_TRACKING_NUM can be 1, 2, and so on.
     */
    public void setRevisionTrackingNum(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>oagi.revision.revision_tracking_num</code>. This supports the ability to undo changes during a revision (life cycle of a revision is from the component's WIP state to PUBLISHED state). REVISION_TRACKING_NUM can be 1, 2, and so on.
     */
    public UInteger getRevisionTrackingNum() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>oagi.revision.revision_action</code>. This indicates the action associated with the record.
     */
    public void setRevisionAction(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>oagi.revision.revision_action</code>. This indicates the action associated with the record.
     */
    public String getRevisionAction() {
        return (String) get(3);
    }

    /**
     * Setter for <code>oagi.revision.reference</code>.
     */
    public void setReference(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>oagi.revision.reference</code>.
     */
    public String getReference() {
        return (String) get(4);
    }

    /**
     * Setter for <code>oagi.revision.snapshot</code>.
     */
    public void setSnapshot(JSON value) {
        set(5, value);
    }

    /**
     * Getter for <code>oagi.revision.snapshot</code>.
     */
    public JSON getSnapshot() {
        return (JSON) get(5);
    }

    /**
     * Setter for <code>oagi.revision.prev_revision_id</code>.
     */
    public void setPrevRevisionId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>oagi.revision.prev_revision_id</code>.
     */
    public ULong getPrevRevisionId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>oagi.revision.next_revision_id</code>.
     */
    public void setNextRevisionId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>oagi.revision.next_revision_id</code>.
     */
    public ULong getNextRevisionId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>oagi.revision.created_by</code>.
     */
    public void setCreatedBy(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>oagi.revision.created_by</code>.
     */
    public ULong getCreatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>oagi.revision.creation_timestamp</code>.
     */
    public void setCreationTimestamp(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>oagi.revision.creation_timestamp</code>.
     */
    public LocalDateTime getCreationTimestamp() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, UInteger, UInteger, String, String, JSON, ULong, ULong, ULong, LocalDateTime> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, UInteger, UInteger, String, String, JSON, ULong, ULong, ULong, LocalDateTime> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Revision.REVISION.REVISION_ID;
    }

    @Override
    public Field<UInteger> field2() {
        return Revision.REVISION.REVISION_NUM;
    }

    @Override
    public Field<UInteger> field3() {
        return Revision.REVISION.REVISION_TRACKING_NUM;
    }

    @Override
    public Field<String> field4() {
        return Revision.REVISION.REVISION_ACTION;
    }

    @Override
    public Field<String> field5() {
        return Revision.REVISION.REFERENCE;
    }

    @Override
    public Field<JSON> field6() {
        return Revision.REVISION.SNAPSHOT;
    }

    @Override
    public Field<ULong> field7() {
        return Revision.REVISION.PREV_REVISION_ID;
    }

    @Override
    public Field<ULong> field8() {
        return Revision.REVISION.NEXT_REVISION_ID;
    }

    @Override
    public Field<ULong> field9() {
        return Revision.REVISION.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Revision.REVISION.CREATION_TIMESTAMP;
    }

    @Override
    public ULong component1() {
        return getRevisionId();
    }

    @Override
    public UInteger component2() {
        return getRevisionNum();
    }

    @Override
    public UInteger component3() {
        return getRevisionTrackingNum();
    }

    @Override
    public String component4() {
        return getRevisionAction();
    }

    @Override
    public String component5() {
        return getReference();
    }

    @Override
    public JSON component6() {
        return getSnapshot();
    }

    @Override
    public ULong component7() {
        return getPrevRevisionId();
    }

    @Override
    public ULong component8() {
        return getNextRevisionId();
    }

    @Override
    public ULong component9() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component10() {
        return getCreationTimestamp();
    }

    @Override
    public ULong value1() {
        return getRevisionId();
    }

    @Override
    public UInteger value2() {
        return getRevisionNum();
    }

    @Override
    public UInteger value3() {
        return getRevisionTrackingNum();
    }

    @Override
    public String value4() {
        return getRevisionAction();
    }

    @Override
    public String value5() {
        return getReference();
    }

    @Override
    public JSON value6() {
        return getSnapshot();
    }

    @Override
    public ULong value7() {
        return getPrevRevisionId();
    }

    @Override
    public ULong value8() {
        return getNextRevisionId();
    }

    @Override
    public ULong value9() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value10() {
        return getCreationTimestamp();
    }

    @Override
    public RevisionRecord value1(ULong value) {
        setRevisionId(value);
        return this;
    }

    @Override
    public RevisionRecord value2(UInteger value) {
        setRevisionNum(value);
        return this;
    }

    @Override
    public RevisionRecord value3(UInteger value) {
        setRevisionTrackingNum(value);
        return this;
    }

    @Override
    public RevisionRecord value4(String value) {
        setRevisionAction(value);
        return this;
    }

    @Override
    public RevisionRecord value5(String value) {
        setReference(value);
        return this;
    }

    @Override
    public RevisionRecord value6(JSON value) {
        setSnapshot(value);
        return this;
    }

    @Override
    public RevisionRecord value7(ULong value) {
        setPrevRevisionId(value);
        return this;
    }

    @Override
    public RevisionRecord value8(ULong value) {
        setNextRevisionId(value);
        return this;
    }

    @Override
    public RevisionRecord value9(ULong value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public RevisionRecord value10(LocalDateTime value) {
        setCreationTimestamp(value);
        return this;
    }

    @Override
    public RevisionRecord values(ULong value1, UInteger value2, UInteger value3, String value4, String value5, JSON value6, ULong value7, ULong value8, ULong value9, LocalDateTime value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RevisionRecord
     */
    public RevisionRecord() {
        super(Revision.REVISION);
    }

    /**
     * Create a detached, initialised RevisionRecord
     */
    public RevisionRecord(ULong revisionId, UInteger revisionNum, UInteger revisionTrackingNum, String revisionAction, String reference, JSON snapshot, ULong prevRevisionId, ULong nextRevisionId, ULong createdBy, LocalDateTime creationTimestamp) {
        super(Revision.REVISION);

        set(0, revisionId);
        set(1, revisionNum);
        set(2, revisionTrackingNum);
        set(3, revisionAction);
        set(4, reference);
        set(5, snapshot);
        set(6, prevRevisionId);
        set(7, nextRevisionId);
        set(8, createdBy);
        set(9, creationTimestamp);
    }
}
